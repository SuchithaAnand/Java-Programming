public class GenericExample<T extends Number> {
    private T value;

    public GenericExample(T value) {
        this.value = value;
    }

    public T getValue() {
        return value;
    }

    public void setValue(T value) {
        this.value = value;
    }

    public static void main(String[] args) {
        // Creating an object of GenericExample with Integer type parameter
        GenericExample<Integer> intObj = new GenericExample<>(10);
        System.out.println("Integer value: " + intObj.getValue());

        // Creating an object of GenericExample with Double type parameter
        GenericExample<Double> doubleObj = new GenericExample<>(3.14);
        System.out.println("Double value: " + doubleObj.getValue());

        // This will cause a compilation error because String does not extend Number
        // GenericExample<String> stringObj = new GenericExample<>("Hello");
    }
}
